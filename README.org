#+title: Teeny Tiny Compiler

This is a compiler of Teeny Tiny written in rust.
It was created following [[https://web.eecs.utk.edu/~azh/blog/teenytinycompiler1.html][this guide]], which creates the compiler in python.

The grammer for Teeny Tiny is as follows (copied from guide):
#+begin_src text
  program ::= {statement}
  statement ::= "PRINT" (expression | string) nl
      | "IF" comparison "THEN" nl {statement} "ENDIF" nl
      | "WHILE" comparison "REPEAT" nl {statement} "ENDWHILE" nl
      | "LABEL" ident nl
      | "GOTO" ident nl
      | "LET" ident "=" expression nl
      | "INPUT" ident nl
  comparison ::= expression (("==" | "!=" | ">" | ">=" | "<" | "<=") expression)+
  expression ::= term {( "-" | "+" ) term}
  term ::= unary {( "/" | "*" ) unary}
  unary ::= ["+" | "-"] primary
  primary ::= number | ident
  nl ::= '\n'+
#+end_src

I hope to work further and add some of the features mentioned in the
"The project continues..." section of Part 3 of the guide, but as of
now, this repository simply recreates the guide in Rust.
